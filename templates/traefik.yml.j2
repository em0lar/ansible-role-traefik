providers:
  file:
    directory: "{{ traefik_dynamic_config_directory }}"
    watch: {{ traefik_dynamic_config_watch }}
  {{ traefik_additional_providers }}

api:
  dashboard: {{ traefik_dashboard.enable }}

entryPoints:
  http:
    address: ":80"
{% if traefik_tls.enable %}
  https:
    address: ":443"
{% endif %}
  {{ traefik_additional_entrypoints }}

{% if traefik_tls.enable and (traefik_tls_letsencrypt_challenges_http.enable or traefik_tls_letsencrypt_challenges_tls.enable or traefik_tls_letsencrypt_challenges_dns.enable) %}
certificatesResolvers:
{% if traefik_tls_letsencrypt_challenges_http.enable %}
  {{ traefik_tls_letsencrypt_challenges_http.name }}:
    acme:
      httpChallenge:
        entryPoint: {{ traefik_tls_letsencrypt_challenges_http.entryPoint }}
      email: "{{ traefik_tls_letsencrypt_challenges_http.email }}"
      storage: "{{ traefik_tls_letsencrypt_challenges_http.storage }}"
{% if traefik_tls_letsencrypt_challenges_http.key_type is defined %}
      keyType: "{{ traefik_tls_letsencrypt_challenges_http.key_type }}"
{% endif %}
{% endif %}
{% if traefik_tls_letsencrypt_challenges_tls.enable %}
  {{ traefik_tls_letsencrypt_challenges_tls.name }}:
    acme:
      tlsChallenge: {}
      email: "{{ traefik_tls_letsencrypt_challenges_tls.email }}"
      storage: "{{ traefik_tls_letsencrypt_challenges_tls.storage }}"
{% if traefik_tls_letsencrypt_challenges_tls.key_type is defined %}
      keyType: "{{ traefik_tls_letsencrypt_challenges_tls.key_type }}"
{% endif %}
{% endif %}
{% if traefik_tls_letsencrypt_challenges_dns.enable %}
  {{ traefik_tls_letsencrypt_challenges_dns.name }}:
    acme:
      dnsChallenge:
        provider: "{{ traefik_tls_letsencrypt_challenges_dns.provider }}"
        delayBeforeCheck: "{{ traefik_tls_letsencrypt_challenges_dns.delay | default(0) }}"
        disablePropagationCheck: {{ traefik_tls_letsencrypt_challenges_dns.disablePropagationCheck | default("false") }}
        email: "{{ traefik_tls_letsencrypt_challenges_dns.email }}"
        storage: "{{ traefik_tls_letsencrypt_challenges_dns.storage }}"
{% if traefik_tls_letsencrypt_challenges_http.key_type is defined %}
        keyType: "{{ traefik_tls_letsencrypt_challenges_http.key_type }}"
{% endif %}
{% if traefik_tls_letsencrypt_challenges_dns.resolvers is defined %}
        resolvers:
{% for resolver in traefik_tls_letsencrypt_challenges_dns.resolvers | default([]) %}
          - {{ resolver }}
{% endfor %}
{% endif %}
{% endif %}
{% endif %}

log:
  format: json
  level: {{ traefik_loglevel }}

{% if traefik_metrics_prometheus is defined or traefik_metrics_datadog is defined or traefik_metrics_statsd is defined or traefik_metrics_influxdb is defined %}
metrics:
{% if traefik_metrics_prometheus is defined %}
  prometheus:
{% for k, v in traefik_metrics_prometheus.items() %}
    {{ k }}: {{ v }}
{% endfor %}
{% endif %}
{% if traefik_metrics_datadog is defined %}
  datadog:
{% for k, v in traefik_metrics_datadog.items() %}
    {{ k }}: {{ v }}
{% endfor %}
{% endif %}
{% if traefik_metrics_statsd is defined %}
  statsD:
{% for k, v in traefik_metrics_statsd.items() %}
    {{ k }}: {{ v }}
{% endfor %}
{% endif %}
{% if traefik_metrics_influxdb is defined %}
  influxDB:
{% for k, v in traefik_metrics_influxdb.items() %}
    {{ k }}: {{ v }}
{% endfor %}
{% endif %}
{% endif %}
